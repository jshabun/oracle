version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data

  api:
    build: ./backend
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    expose:
      - "8001"

  worker:
    build: ./backend
    command: ["bash", "-lc", "celery -A app.tasks.celery_app.app worker -l info"]
    env_file:
      - ./.env
    depends_on:
      - api
      - redis

  beat:
    build: ./backend
    command: ["bash", "-lc", "celery -A app.tasks.celery_app.app beat -l info"]
    env_file:
      - ./.env
    depends_on:
      - worker

  web:
    build: ./frontend
    env_file:
      - ./.env.frontend
    depends_on:
      - api
    expose:
      - "3000"

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
      - api

volumes:
  db_data:
  redis_data:
  caddy_data:
  caddy_config: